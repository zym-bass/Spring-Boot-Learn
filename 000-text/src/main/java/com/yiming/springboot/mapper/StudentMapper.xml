<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.yiming.springboot.mapper.StudentMapper">
  <resultMap id="BaseResultMap" type="com.yiming.springboot.entity.Student">
    <result column="学号" jdbcType="VARCHAR" property="学号" />
    <result column="姓名" jdbcType="VARCHAR" property="姓名" />
    <result column="语文成绩" jdbcType="VARCHAR" property="语文成绩" />
    <result column="数学成绩" jdbcType="VARCHAR" property="数学成绩" />
    <result column="英语成绩" jdbcType="VARCHAR" property="英语成绩" />
    <result column="物理成绩" jdbcType="VARCHAR" property="物理成绩" />
    <result column="化学成绩" jdbcType="VARCHAR" property="化学成绩" />
    <result column="生物成绩" jdbcType="VARCHAR" property="生物成绩" />
    <result column="总成绩" jdbcType="VARCHAR" property="总成绩" />
  </resultMap>
  <select id="countsum"  resultMap="BaseResultMap" >
        select   学号 , 姓名 ,(语文成绩+数学成绩+英语成绩+物理成绩+化学成绩+生物成绩) as 总成绩 from student order by 总成绩 desc , 学号 desc;
    </select>
  <select id="sumStudent"  resultMap="BaseResultMap" >
        select   学号 , 姓名 ,(语文成绩+数学成绩+英语成绩+物理成绩+化学成绩+生物成绩) as 总成绩 from student;
    </select>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    学号, 姓名, 语文成绩, 数学成绩, 英语成绩, 物理成绩, 化学成绩, 生物成绩
  </sql>
  <select id="selectByExample" parameterType="com.yiming.springboot.entity.StudentExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from student
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="com.yiming.springboot.entity.StudentExample">
    delete from student
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.yiming.springboot.entity.Student">
    insert into student (学号, 姓名, 语文成绩, 
      数学成绩, 英语成绩, 物理成绩, 化学成绩, 
      生物成绩)
    values (#{学号,jdbcType=VARCHAR}, #{姓名,jdbcType=VARCHAR}, #{语文成绩,jdbcType=VARCHAR}, 
      #{数学成绩,jdbcType=VARCHAR}, #{英语成绩,jdbcType=VARCHAR}, #{物理成绩,jdbcType=VARCHAR}, #{化学成绩,jdbcType=VARCHAR}, 
      #{生物成绩,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.yiming.springboot.entity.Student">
    insert into student
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="学号 != null">
        学号,
      </if>
      <if test="姓名 != null">
        姓名,
      </if>
      <if test="语文成绩 != null">
        语文成绩,
      </if>
      <if test="数学成绩 != null">
        数学成绩,
      </if>
      <if test="英语成绩 != null">
        英语成绩,
      </if>
      <if test="物理成绩 != null">
        物理成绩,
      </if>
      <if test="化学成绩 != null">
        化学成绩,
      </if>
      <if test="生物成绩 != null">
        生物成绩,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="学号 != null">
        #{学号,jdbcType=VARCHAR},
      </if>
      <if test="姓名 != null">
        #{姓名,jdbcType=VARCHAR},
      </if>
      <if test="语文成绩 != null">
        #{语文成绩,jdbcType=VARCHAR},
      </if>
      <if test="数学成绩 != null">
        #{数学成绩,jdbcType=VARCHAR},
      </if>
      <if test="英语成绩 != null">
        #{英语成绩,jdbcType=VARCHAR},
      </if>
      <if test="物理成绩 != null">
        #{物理成绩,jdbcType=VARCHAR},
      </if>
      <if test="化学成绩 != null">
        #{化学成绩,jdbcType=VARCHAR},
      </if>
      <if test="生物成绩 != null">
        #{生物成绩,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.yiming.springboot.entity.StudentExample" resultType="java.lang.Long">
    select count(*) from student
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update student
    <set>
      <if test="record.学号 != null">
        学号 = #{record.学号,jdbcType=VARCHAR},
      </if>
      <if test="record.姓名 != null">
        姓名 = #{record.姓名,jdbcType=VARCHAR},
      </if>
      <if test="record.语文成绩 != null">
        语文成绩 = #{record.语文成绩,jdbcType=VARCHAR},
      </if>
      <if test="record.数学成绩 != null">
        数学成绩 = #{record.数学成绩,jdbcType=VARCHAR},
      </if>
      <if test="record.英语成绩 != null">
        英语成绩 = #{record.英语成绩,jdbcType=VARCHAR},
      </if>
      <if test="record.物理成绩 != null">
        物理成绩 = #{record.物理成绩,jdbcType=VARCHAR},
      </if>
      <if test="record.化学成绩 != null">
        化学成绩 = #{record.化学成绩,jdbcType=VARCHAR},
      </if>
      <if test="record.生物成绩 != null">
        生物成绩 = #{record.生物成绩,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update student
    set 学号 = #{record.学号,jdbcType=VARCHAR},
      姓名 = #{record.姓名,jdbcType=VARCHAR},
      语文成绩 = #{record.语文成绩,jdbcType=VARCHAR},
      数学成绩 = #{record.数学成绩,jdbcType=VARCHAR},
      英语成绩 = #{record.英语成绩,jdbcType=VARCHAR},
      物理成绩 = #{record.物理成绩,jdbcType=VARCHAR},
      化学成绩 = #{record.化学成绩,jdbcType=VARCHAR},
      生物成绩 = #{record.生物成绩,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
</mapper>